{"version":3,"sources":["firebase.js","Todo.js","App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","todo","props","Button","className","onClick","event","collection","doc","id","delete","variant","color","App","useState","listitem","setlistitem","inputs","setinputs","useEffect","orderBy","onSnapshot","snapshot","docs","map","data","FormControl","InputLabel","Input","value","type","onChange","target","disabled","preventDefault","add","timestamp","FieldValue","serverTimestamp","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAekBA,GAbIC,IAASC,cAAc,CACzCC,OAAQ,0CACVC,WAAY,kCACZC,YAAa,sDACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGJT,IAASU,a,gBCEPC,EAXF,SAAAC,GACV,OACG,8BACG,+BAAKA,EAAMD,KAAKA,KAChB,cAACE,EAAA,EAAD,CAAQC,UAAU,gBAAgBC,QAAS,SAAAC,GAASjB,EAAGkB,WAAW,SAASC,IAAIN,EAAMD,KAAKQ,IAAIC,UAAWC,QAAQ,YAAYC,MAAM,YAAnI,0B,wBC8CMC,MA/Cf,WAAgB,IAAD,EAEkBC,mBAAS,IAF3B,mBAENC,EAFM,KAEGC,EAFH,OAGgBF,mBAAS,IAHzB,mBAGNG,EAHM,KAGEC,EAHF,KA0Bb,OAnBAC,oBACE9B,EAAGkB,WAAW,SAASa,QAAQ,YAAY,QAAQC,YAAW,SAAAC,GAC5DN,EAAYM,EAASC,KAAKC,KAAI,SAAAhB,GAAG,MAAK,CAACC,GAAGD,EAAIC,GAAGR,KAAKO,EAAIiB,OAAOxB,aAElE,IAgBD,sBAAKG,UAAU,MAAf,UACE,wDACA,+BAEA,eAACsB,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,wBACA,cAACC,EAAA,EAAD,CAAQC,MAAOZ,EAAQa,KAAK,OAAOC,SAAU,SAAAzB,GAAK,OAAIY,EAAUZ,EAAM0B,OAAOH,UAC7E,cAAC1B,EAAA,EAAD,CAAQ8B,UAAWhB,EAAQa,KAAK,SAASnB,QAAQ,YAAYC,MAAM,UAAUP,QApBjE,SAACC,GACfA,EAAM4B,iBAEN7C,EAAGkB,WAAW,SAAS4B,IAAI,CACzBlC,KAAOgB,EACPmB,UAAW9C,IAASU,UAAUqC,WAAWC,oBAI3CpB,EAAU,KAWR,2BAMA,6BACGH,EAASS,KAAI,SAAAe,GAAQ,OAAO,cAAC,EAAD,CAAMtC,KAAMsC,aCpClCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.305a9fff.chunk.js","sourcesContent":["\r\n  import firebase from 'firebase';\r\n  const firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBxff0K-3IqtuNpSmqEFEWfnTdtlI97QDE\",\r\n  authDomain: \"todoo-app-475aa.firebaseapp.com\",\r\n  databaseURL: \"https://todoo-app-475aa-default-rtdb.firebaseio.com\",\r\n  projectId: \"todoo-app-475aa\",\r\n  storageBucket: \"todoo-app-475aa.appspot.com\",\r\n  messagingSenderId: \"461917167056\",\r\n  appId: \"1:461917167056:web:4afce37b1cd7a0ee5eadd5\",\r\n  measurementId: \"G-4ML26KHLMW\"\r\n  });\r\n\r\n  const db = firebase.firestore();\r\n\r\n  export  default db;\r\n  ","import react from 'react';\r\nimport db from './firebase';\r\nimport './Todo.css';\r\nimport { Button } from '@material-ui/core';\r\nconst todo = props =>{\r\n   return  (\r\n      <div>\r\n         <li>{props.todo.todo}\r\n         <Button className=\"button-delete\" onClick={event =>{db.collection('todos').doc(props.todo.id).delete()}} variant=\"contained\" color=\"secondary\">\r\n            Delete\r\n         </Button>\r\n         </li>\r\n      </div>\r\n   );\r\n};\r\nexport default todo;","import {useEffect, useState} from 'react';\nimport './App.css';\nimport Todo from './Todo'\nimport { Button,FormControl,InputLabel,Input } from '@material-ui/core';\nimport db from './firebase';\nimport firebase from 'firebase';\n\nfunction App() {\n\n  const [listitem,setlistitem] = useState([]);\n  const [inputs ,setinputs ] = useState('');\n  \n\n  // useEffect(function,dependecies);\n  useEffect(\n    db.collection('todos').orderBy('timestamp','desc').onSnapshot(snapshot => {\n      setlistitem(snapshot.docs.map(doc => ({id:doc.id,todo:doc.data().todo})))\n    })\n    ,[]);\n\n  \n  const addlist = (event) =>{\n    event.preventDefault();\n\n    db.collection('todos').add({\n      todo : inputs,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n\n    // setlistitem([...listitem,inputs]);  no use \n    setinputs('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Welcome To My ToDo App</h1>\n      <form>\n\n      <FormControl>\n      <InputLabel>Your ToDo</InputLabel>\n      <Input  value={inputs} type=\"text\" onChange={event => setinputs(event.target.value) }  />\n      <Button disabled={!inputs} type=\"submit\" variant=\"contained\" color=\"primary\" onClick={addlist}>\n       Add ToDo\n      </Button>\n      </FormControl>\n      </form>\n    \n      <ul>\n        {listitem.map(list =>{return <Todo todo={list} /> })}  \n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}